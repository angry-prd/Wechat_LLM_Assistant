// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// 用户模型
model User {
  id        String   @id @default(uuid())
  username  String   @unique
  password  String
  email     String?  @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // 关联
  articles      Article[]
  chatModels    ChatModel[]
  userConfig    UserConfig?
}

// 聊天模型配置
model ChatModel {
  id        String   @id @default(uuid())
  name      String
  apiKey    String
  endpoint  String
  model     String
  isDefault Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // 关联
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// 用户配置
model UserConfig {
  id                    String   @id @default(uuid())
  wechatAppId           String?
  wechatAppSecret       String?
  wechatToken           String?
  wechatEncodingAESKey  String?
  defaultArticleAuthor  String?
  defaultArticleCopyright String?
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  
  // 关联
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// 文章模型
model Article {
  id        String   @id @default(uuid())
  title     String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // 关联
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
